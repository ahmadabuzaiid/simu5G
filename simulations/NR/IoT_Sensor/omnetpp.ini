[General]
cmdenv-express-mode = true
cmdenv-output-file = log.txt
cmdenv-status-frequency = 10s

image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

################ Mobility parameters #####################

**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numBands = 50 # this value should be kept equal to the number of RBs

############### Transmission Power ##################
**.ueTxPower = 26
**.eNodeBTxPower = 40
**.targetBler = 0.01
**.blerShift = 5  

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


#------------------------------------#
# Config Standalone
#
# Topology configuration for the exemplary scenario for NR Standalone deployment
#
[Config Standalone]
network = simu5g.simulations.NR.networks.SingleCell_Standalone_IoT
#ssim-time-limit=20s

############### e/gNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m

############## UE configuration ##################
*.numUe = 1

# connect the UE's NIC to the corresponding serving eNB
*.ue[*].macCellId = 1
*.ue[*].masterId = 1
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

# UE position
*.ue[0].mobility.initialX = 450m
*.ue[0].mobility.initialY = 400m
#------------------------------------#


#------------------------------------#
# Config IoT-UL
#
# General configuration for IoT-UL traffic from the UE
# 
[Config IoT_UL]
extends=Standalone

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1

#============= Application Setup =============
*.server.app[*].typename = "IoTReceiver"
*.server.app[*].localPort = 3000+ancestorIndex(0)

*.ue[*].app[*].PacketSize = 60
# obtain the address of the client by reading its index in the array of udp Apps
*.ue[*].app[*].destAddress = "server" 
*.ue[*].app[*].localPort = 3088+ancestorIndex(0)
*.ue[*].app[*].typename = "IoTSender"
*.ue[*].app[*].startTime = uniform(0s,0.02s)
#------------------------------------#